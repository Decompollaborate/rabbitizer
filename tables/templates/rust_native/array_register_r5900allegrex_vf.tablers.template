/* SPDX-FileCopyrightText: Â© 2024 Decompollaborate */
/* SPDX-License-Identifier: MIT */

#define HASH #
#define HASH_EXPANSION(x) x
#define SPECIAL_RS_TAG(...) HASH_EXPANSION(HASH)[__VA_ARGS__]

#define RABBITIZER_DEF_REG(prefix, name, value, ...) \
    table[ RegisterR5900VF::name as usize] = RegisterDescriptor { \
        __VA_ARGS__ \
        ..RegisterDescriptor::new( concat!("$", #name), value, concat!("$vf", #value) ) \
    } .check_panic_chain();

use crate::{RegisterR5900VF, RegisterDescriptor};

#define REGISTER_COUNT 32

pub static R5900_VF_REGISTERS: [RegisterDescriptor; REGISTER_COUNT] = {
    let mut table = [RegisterDescriptor::default(); REGISTER_COUNT];

    #include "registers/RabbitizerRegister_R5900VF.inc"

    let mut i = 0;
    while i < REGISTER_COUNT {
        assert!(table[i].value as usize == i, "Broken register index?");

        i += 1;
    }

    table
};

#undef RABBITIZER_DEF_REG
