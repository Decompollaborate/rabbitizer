/* SPDX-FileCopyrightText: Â© 2024-2025 Decompollaborate */
/* SPDX-License-Identifier: MIT */

#define HASH #
#define HASH_EXPANSION(x) x
#define SPECIAL_RS_TAG(...) HASH_EXPANSION(HASH)[__VA_ARGS__]


#define __IMPL_RAB_DEF_OPCODE(prefix, name) \
    prefix##_##name,


#define RAB_DEF_OPCODE(prefix, case_bits, name, isa_version_min, ...) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)

#define RAB_DEF_OPCODE_ALTNAME(prefix, case_bits, name, altname, isa_version_min, ...) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)

#define RAB_DEF_OPCODE_PSEUDO(prefix, name, isa_version_min, ...) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)

#define RAB_DEF_OPCODE_GATED(prefix, case_bits, name, isa_version_min, gate, ...) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)


#define RAB_DEF_OPCODE_EXTENSION(prefix, case_bits, name, isa_exten, ...) \
    SPECIAL_RS_TAG(cfg(feature = #isa_exten )) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)

#define RAB_DEF_OPCODE_EXTENSION_ALTNAME(prefix, case_bits, name, altname, isa_exten, ...) \
    SPECIAL_RS_TAG(cfg(feature = #isa_exten )) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)

#define RAB_DEF_OPCODE_EXTENSION_GATED(prefix, case_bits, name, isa_exten, gate, ...) \
    SPECIAL_RS_TAG(cfg(feature = #gate )) \
    __IMPL_RAB_DEF_OPCODE(prefix, name)

#define RAB_DEF_OPCODE_EXTENSION_REMOVED(case_bits, prefix, name, isa_exten)

#define RAB_DEF_OPCODE_REDIRECT(case_bits, prefix, kind)


SPECIAL_RS_TAG(derive(Debug, Copy, Clone, Hash, PartialEq, Eq, PartialOrd, Ord))
SPECIAL_RS_TAG(allow(non_camel_case_types))
pub enum Opcode {
    #include "Opcode.inc"
}

#undef RAB_DEF_OPCODE
#undef RAB_DEF_OPCODE_ALTNAME
#undef RAB_DEF_OPCODE_PSEUDO
#undef RAB_DEF_OPCODE_GATED

#undef RAB_DEF_OPCODE_EXTENSION
#undef RAB_DEF_OPCODE_EXTENSION_ALTNAME
#undef RAB_DEF_OPCODE_EXTENSION_GATED
#undef RAB_DEF_OPCODE_EXTENSION_REMOVED

#undef RAB_DEF_OPCODE_REDIRECT
