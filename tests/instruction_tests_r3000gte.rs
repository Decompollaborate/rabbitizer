/* SPDX-FileCopyrightText: Â© 2024 Decompollaborate */
/* SPDX-License-Identifier: MIT */

mod common;

use common::{check_test_entries, TestEntry};
use rabbitizer::opcodes::Opcode;
use rabbitizer::{DisplayFlags, Instruction, InstructionFlags, Vram};

#[test]
fn check_r3000gte_instructions() {
    const ENTRIES: &[TestEntry] = &[
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A180001,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "RTPS",
            expected_opcode: Opcode::r3000gte_RTPS,
            opcode_str: "RTPS",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A280030,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "RTPT",
            expected_opcode: Opcode::r3000gte_RTPT,
            opcode_str: "RTPT",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A680029,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "DPCL",
            expected_opcode: Opcode::r3000gte_DPCL,
            opcode_str: "DPCL",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A780010,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "DPCS",
            expected_opcode: Opcode::r3000gte_DPCS,
            opcode_str: "DPCS",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AF8002A,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "DPCT",
            expected_opcode: Opcode::r3000gte_DPCT,
            opcode_str: "DPCT",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A980011,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "INTPL",
            expected_opcode: Opcode::r3000gte_INTPL,
            opcode_str: "INTPL",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AC8041E,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCS",
            expected_opcode: Opcode::r3000gte_NCS,
            opcode_str: "NCS",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AD80420,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCT",
            expected_opcode: Opcode::r3000gte_NCT,
            opcode_str: "NCT",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AE80413,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCDS",
            expected_opcode: Opcode::r3000gte_NCDS,
            opcode_str: "NCDS",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AF80416,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCDT",
            expected_opcode: Opcode::r3000gte_NCDT,
            opcode_str: "NCDT",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B08041B,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCCS",
            expected_opcode: Opcode::r3000gte_NCCS,
            opcode_str: "NCCS",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B18043F,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCCT",
            expected_opcode: Opcode::r3000gte_NCCT,
            opcode_str: "NCCT",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B280414,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "CDP",
            expected_opcode: Opcode::r3000gte_CDP,
            opcode_str: "CDP",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B38041C,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "CC",
            expected_opcode: Opcode::r3000gte_CC,
            opcode_str: "CC",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B400006,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "NCLIP",
            expected_opcode: Opcode::r3000gte_NCLIP,
            opcode_str: "NCLIP",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B58002D,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "AVSZ3",
            expected_opcode: Opcode::r3000gte_AVSZ3,
            opcode_str: "AVSZ3",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B68002E,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "AVSZ4",
            expected_opcode: Opcode::r3000gte_AVSZ4,
            opcode_str: "AVSZ4",
            operands_str: [Some(""), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A400012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       0, 0, 0, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("0"), Some("0"), Some("0"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AA00428,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "SQR         0",
            expected_opcode: Opcode::r3000gte_SQR,
            opcode_str: "SQR",
            operands_str: [Some("0"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B70000C,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "OP          0",
            expected_opcode: Opcode::r3000gte_OP,
            opcode_str: "OP",
            operands_str: [Some("0"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B90003D,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "GPF         0",
            expected_opcode: Opcode::r3000gte_GPF,
            opcode_str: "GPF",
            operands_str: [Some("0"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4BA0003E,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "GPL         0",
            expected_opcode: Opcode::r3000gte_GPL,
            opcode_str: "GPL",
            operands_str: [Some("0"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A486012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 0, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("0"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A48E012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 1, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("1"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A496012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 2, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("2"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A49E012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 3, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("3"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A41E012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       0, 0, 3, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("0"), Some("0"), Some("3"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A480012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 0, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("0"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A488012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 1, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("1"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A490012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 2, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("2"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A498012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 3, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("3"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A482012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 0, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("0"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A48A012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 1, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("1"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A492012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 2, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("2"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A49A012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 0, 3, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("0"), Some("3"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4A6412,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 0, 3, 1",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("0"), Some("3"), Some("1")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4A6012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 0, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("0"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4AE012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 1, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("1"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4B6012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 2, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("2"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4BE012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 3, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("3"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4A0012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 0, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("0"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4A8012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 1, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("1"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4B0012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 2, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("2"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4B8012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 3, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("3"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4A2012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 0, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("0"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4AA012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 1, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("1"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4B2012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 2, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("2"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4BA012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 1, 3, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("1"), Some("3"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4DA412,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 3, 1, 1",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("3"), Some("1"), Some("1")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4C6012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 0, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("0"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4CE012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 1, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("1"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4D6012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 2, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("2"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4DE012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 3, 3, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("3"), Some("3"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4C0012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 0, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("0"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4C8012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 1, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("1"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4D0012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 2, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("2"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4D8012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 3, 0, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("3"), Some("0"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4C2012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 0, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("0"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4CA012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 1, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("1"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4D2012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 2, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("2"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4A4DA012,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "MVMVA       1, 2, 3, 1, 0",
            expected_opcode: Opcode::r3000gte_MVMVA,
            opcode_str: "MVMVA",
            operands_str: [Some("1"), Some("2"), Some("3"), Some("1"), Some("0")],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4AA80428,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "SQR         1",
            expected_opcode: Opcode::r3000gte_SQR,
            opcode_str: "SQR",
            operands_str: [Some("1"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B78000C,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "OP          1",
            expected_opcode: Opcode::r3000gte_OP,
            opcode_str: "OP",
            operands_str: [Some("1"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4B98003D,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "GPF         1",
            expected_opcode: Opcode::r3000gte_GPF,
            opcode_str: "GPF",
            operands_str: [Some("1"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new_r3000gte(
                0x4BA8003E,
                Vram::new(0x80000000),
                InstructionFlags::default(),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "GPL         1",
            expected_opcode: Opcode::r3000gte_GPL,
            opcode_str: "GPL",
            operands_str: [Some("1"), None, None, None, None],
        },
    ];

    assert_eq!(check_test_entries(ENTRIES, true), (0, 0));
}
