/* SPDX-FileCopyrightText: Â© 2024 Decompollaborate */
/* SPDX-License-Identifier: MIT */

mod common;

use common::{check_test_entries, TestEntry};
use rabbitizer::display_flags::DisplayFlags;
use rabbitizer::instr::{Instruction, InstructionFlags};
use rabbitizer::isa::IsaVersion;
use rabbitizer::opcodes::Opcode;
use rabbitizer::vram::Vram;

#[test]
fn check_none_instructions() {
    const ENTRIES: &[TestEntry] = &[
        TestEntry {
            instr: Instruction::new(
                0x08000419,
                Vram::new(0x80001100),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "j           func_80001064",
            expected_opcode: Opcode::core_j,
            opcode_str: "j",
            operands_str: [Some("func_80001064"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x3C088001,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lui         $t0, 0x8001",
            expected_opcode: Opcode::core_lui,
            opcode_str: "lui",
            operands_str: [Some("$t0"), Some("0x8001"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x25080E60,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "addiu       $t0, $t0, 0xE60",
            expected_opcode: Opcode::core_addiu,
            opcode_str: "addiu",
            operands_str: [Some("$t0"), Some("$t0"), Some("0xE60"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x3C090002,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lui         $t1, 0x2",
            expected_opcode: Opcode::core_lui,
            opcode_str: "lui",
            operands_str: [Some("$t1"), Some("0x2"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x25298DE0,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "addiu       $t1, $t1, -0x7220",
            expected_opcode: Opcode::core_addiu,
            opcode_str: "addiu",
            operands_str: [Some("$t1"), Some("$t1"), Some("-0x7220"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xAD000000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sw          $zero, 0x0($t0)",
            expected_opcode: Opcode::core_sw,
            opcode_str: "sw",
            operands_str: [Some("$zero"), Some("0x0($t0)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xAD000004,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sw          $zero, 0x4($t0)",
            expected_opcode: Opcode::core_sw,
            opcode_str: "sw",
            operands_str: [Some("$zero"), Some("0x4($t0)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x21080008,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "addi        $t0, $t0, 0x8",
            expected_opcode: Opcode::core_addi,
            opcode_str: "addi",
            operands_str: [Some("$t0"), Some("$t0"), Some("0x8"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x2129FFF8,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "addi        $t1, $t1, -0x8",
            expected_opcode: Opcode::core_addi,
            opcode_str: "addi",
            operands_str: [Some("$t1"), Some("$t1"), Some("-0x8"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x1520FFFB,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "bnez        $t1, . + 4 + (-0x5 << 2)",
            expected_opcode: Opcode::core_bnez,
            opcode_str: "bnez",
            operands_str: [Some("$t1"), Some(". + 4 + (-0x5 << 2)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00000000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "nop",
            expected_opcode: Opcode::core_nop,
            opcode_str: "nop",
            operands_str: [None, None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x3C0A8000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lui         $t2, 0x8000",
            expected_opcode: Opcode::core_lui,
            opcode_str: "lui",
            operands_str: [Some("$t2"), Some("0x8000"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x254A0494,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "addiu       $t2, $t2, 0x494",
            expected_opcode: Opcode::core_addiu,
            opcode_str: "addiu",
            operands_str: [Some("$t2"), Some("$t2"), Some("0x494"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x3C1D8002,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lui         $sp, 0x8002",
            expected_opcode: Opcode::core_lui,
            opcode_str: "lui",
            operands_str: [Some("$sp"), Some("0x8002"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x01400008,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "jr          $t2",
            expected_opcode: Opcode::core_jr,
            opcode_str: "jr",
            operands_str: [Some("$t2"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x27BDF8C0,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "addiu       $sp, $sp, -0x740",
            expected_opcode: Opcode::core_addiu,
            opcode_str: "addiu",
            operands_str: [Some("$sp"), Some("$sp"), Some("-0x740"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x3C018001,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lui         $at, 0x8001",
            expected_opcode: Opcode::core_lui,
            opcode_str: "lui",
            operands_str: [Some("$at"), Some("0x8001"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x03E00008,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "jr          $ra",
            expected_opcode: Opcode::core_jr,
            opcode_str: "jr",
            operands_str: [Some("$ra"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xAC24E190,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sw          $a0, -0x1E70($at)",
            expected_opcode: Opcode::core_sw,
            opcode_str: "sw",
            operands_str: [Some("$a0"), Some("-0x1E70($at)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x3C018001,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: Some("%hi(D_8000E190)"),
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lui         $at, %hi(D_8000E190)",
            expected_opcode: Opcode::core_lui,
            opcode_str: "lui",
            operands_str: [Some("$at"), Some("%hi(D_8000E190)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xAC24E190,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: Some("%lo(D_8000E190)"),
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sw          $a0, %lo(D_8000E190)($at)",
            expected_opcode: Opcode::core_sw,
            opcode_str: "sw",
            operands_str: [Some("$a0"), Some("%lo(D_8000E190)($at)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0C001F24,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "jal         func_80007C90",
            expected_opcode: Opcode::core_jal,
            opcode_str: "jal",
            operands_str: [Some("func_80007C90"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0C001F24,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: Some("some_func"),
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "jal         some_func",
            expected_opcode: Opcode::core_jal,
            opcode_str: "jal",
            operands_str: [Some("some_func"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x8F99805C,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lw          $t9, -0x7FA4($gp)",
            expected_opcode: Opcode::core_lw,
            opcode_str: "lw",
            operands_str: [Some("$t9"), Some("-0x7FA4($gp)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x8F99805C,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: Some("%call16(strcmp)"),
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lw          $t9, %call16(strcmp)($gp)",
            expected_opcode: Opcode::core_lw,
            opcode_str: "lw",
            operands_str: [Some("$t9"), Some("%call16(strcmp)($gp)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x8F858028,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lw          $a1, -0x7FD8($gp)",
            expected_opcode: Opcode::core_lw,
            opcode_str: "lw",
            operands_str: [Some("$a1"), Some("-0x7FD8($gp)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x8F858028,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: Some("%got(STR_10007C90)"),
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lw          $a1, %got(STR_10007C90)($gp)",
            expected_opcode: Opcode::core_lw,
            opcode_str: "lw",
            operands_str: [
                Some("$a1"),
                Some("%got(STR_10007C90)($gp)"),
                None,
                None,
                None,
            ],
        },
        TestEntry {
            instr: Instruction::new(
                0x00435022,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sub         $t2, $v0, $v1",
            expected_opcode: Opcode::core_sub,
            opcode_str: "sub",
            operands_str: [Some("$t2"), Some("$v0"), Some("$v1"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00025022,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "neg         $t2, $v0",
            expected_opcode: Opcode::core_neg,
            opcode_str: "neg",
            operands_str: [Some("$t2"), Some("$v0"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E41823,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "subu        $v1, $a3, $a0",
            expected_opcode: Opcode::core_subu,
            opcode_str: "subu",
            operands_str: [Some("$v1"), Some("$a3"), Some("$a0"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00041823,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "negu        $v1, $a0",
            expected_opcode: Opcode::core_negu,
            opcode_str: "negu",
            operands_str: [Some("$v1"), Some("$a0"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x42000010,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "rfe",
            expected_opcode: Opcode::core_rfe,
            opcode_str: "rfe",
            operands_str: [None, None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0260F809,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "jalr        $s3",
            expected_opcode: Opcode::core_jalr,
            opcode_str: "jalr",
            operands_str: [Some("$s3"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0260F809,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_expand_jalr(true),
            valid: true,
            expected: "jalr        $ra, $s3",
            expected_opcode: Opcode::core_jalr,
            opcode_str: "jalr",
            operands_str: [Some("$ra, $s3"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x02602009,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "jalr        $a0, $s3",
            expected_opcode: Opcode::core_jalr,
            opcode_str: "jalr",
            operands_str: [Some("$a0, $s3"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00042100,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sll         $a0, $a0, 4",
            expected_opcode: Opcode::core_sll,
            opcode_str: "sll",
            operands_str: [Some("$a0"), Some("$a0"), Some("4"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00021882,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "srl         $v1, $v0, 2",
            expected_opcode: Opcode::core_srl,
            opcode_str: "srl",
            operands_str: [Some("$v1"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00017443,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sra         $t6, $at, 17",
            expected_opcode: Opcode::core_sra,
            opcode_str: "sra",
            operands_str: [Some("$t6"), Some("$at"), Some("17"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00042FF8,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dsll        $a1, $a0, 31",
            expected_opcode: Opcode::core_dsll,
            opcode_str: "dsll",
            operands_str: [Some("$a1"), Some("$a0"), Some("31"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x000637FA,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dsrl        $a2, $a2, 31",
            expected_opcode: Opcode::core_dsrl,
            opcode_str: "dsrl",
            operands_str: [Some("$a2"), Some("$a2"), Some("31"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0002137B,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dsra        $v0, $v0, 13",
            expected_opcode: Opcode::core_dsra,
            opcode_str: "dsra",
            operands_str: [Some("$v0"), Some("$v0"), Some("13"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x000437FC,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dsll32      $a2, $a0, 31",
            expected_opcode: Opcode::core_dsll32,
            opcode_str: "dsll32",
            operands_str: [Some("$a2"), Some("$a0"), Some("31"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0005283E,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dsrl32      $a1, $a1, 0",
            expected_opcode: Opcode::core_dsrl32,
            opcode_str: "dsrl32",
            operands_str: [Some("$a1"), Some("$a1"), Some("0"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0002103F,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dsra32      $v0, $v0, 0",
            expected_opcode: Opcode::core_dsra32,
            opcode_str: "dsra32",
            operands_str: [Some("$v0"), Some("$v0"), Some("0"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x40086800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "mfc0        $t0, $13",
            expected_opcode: Opcode::core_mfc0,
            opcode_str: "mfc0",
            operands_str: [Some("$t0"), Some("$13"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x40286800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dmfc0       $t0, $13",
            expected_opcode: Opcode::core_dmfc0,
            opcode_str: "dmfc0",
            operands_str: [Some("$t0"), Some("$13"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x40486800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "cfc0        $t0, $13",
            expected_opcode: Opcode::core_cfc0,
            opcode_str: "cfc0",
            operands_str: [Some("$t0"), Some("$13"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x40886800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "mtc0        $t0, $13",
            expected_opcode: Opcode::core_mtc0,
            opcode_str: "mtc0",
            operands_str: [Some("$t0"), Some("$13"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x40A86800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "dmtc0       $t0, $13",
            expected_opcode: Opcode::core_dmtc0,
            opcode_str: "dmtc0",
            operands_str: [Some("$t0"), Some("$13"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x40C86800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "ctc0        $t0, $13",
            expected_opcode: Opcode::core_ctc0,
            opcode_str: "ctc0",
            operands_str: [Some("$t0"), Some("$13"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x46168200,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_named_fpr(false),
            valid: true,
            expected: "add.s       $f8, $f16, $f22",
            expected_opcode: Opcode::core_add_s,
            opcode_str: "add.s",
            operands_str: [Some("$f8"), Some("$f16"), Some("$f22"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x46168200,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_named_fpr(true),
            valid: true,
            expected: "add.s       $ft2, $ft4, $fs1",
            expected_opcode: Opcode::core_add_s,
            opcode_str: "add.s",
            operands_str: [Some("$ft2"), Some("$ft4"), Some("$fs1"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x44C2F800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "ctc1        $v0, $31",
            expected_opcode: Opcode::core_ctc1,
            opcode_str: "ctc1",
            operands_str: [Some("$v0"), Some("$31"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xBD150000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "cache       0x15, 0x0($t0)",
            expected_opcode: Opcode::core_cache,
            opcode_str: "cache",
            operands_str: [Some("0x15"), Some("0x0($t0)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xCD150018,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: false,
            expected: ".word       0xCD150018                   /* INVALID / 01150018 <OpcodeCategory: CORE_NORMAL> */",
            expected_opcode: Opcode::ALL_INVALID,
            opcode_str: "INVALID",
            operands_str: [None, None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xCD150008,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_IV),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "pref        0x15, 0x8($t0)",
            expected_opcode:   Opcode::core_pref,
            opcode_str: "pref",
            operands_str: [Some("0x15"), Some("0x8($t0)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0001008D,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "break       1, 2",
            expected_opcode: Opcode::core_break,
            opcode_str: "break",
            operands_str: [Some("1, 2"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0001008D,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_sn64_break_fix(true),
            valid: true,
            expected: ".word       0x0001008D                   /* break       1, 2 / 00000000 <OpcodeCategory: CORE_SPECIAL> */",
            expected_opcode: Opcode::core_break,
            opcode_str: "break",
            operands_str: [Some("1, 2"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0007000D,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "break       7",
            expected_opcode: Opcode::core_break,
            opcode_str: "break",
            operands_str: [Some("7"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0007000D,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_sn64_break_fix(true),
            valid: true,
            expected: ".word       0x0007000D                   /* break       7 / 00000000 <OpcodeCategory: CORE_SPECIAL> */",
            expected_opcode: Opcode::core_break,
            opcode_str: "break",
            operands_str: [Some("7"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0000000C,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "syscall     0",
            expected_opcode: Opcode::core_syscall,
            opcode_str: "syscall",
            operands_str: [Some("0"), None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E200B0,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "tge         $a3, $v0, 2",
            expected_opcode: Opcode::core_tge,
            opcode_str: "tge",
            operands_str: [Some("$a3"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E200B1,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "tgeu        $a3, $v0, 2",
            expected_opcode: Opcode::core_tgeu,
            opcode_str: "tgeu",
            operands_str: [Some("$a3"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E200B2,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "tlt         $a3, $v0, 2",
            expected_opcode: Opcode::core_tlt,
            opcode_str: "tlt",
            operands_str: [Some("$a3"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E200B3,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "tltu        $a3, $v0, 2",
            expected_opcode: Opcode::core_tltu,
            opcode_str: "tltu",
            operands_str: [Some("$a3"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E200B4,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "teq         $a3, $v0, 2",
            expected_opcode: Opcode::core_teq,
            opcode_str: "teq",
            operands_str: [Some("$a3"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x00E200B6,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "tne         $a3, $v0, 2",
            expected_opcode: Opcode::core_tne,
            opcode_str: "tne",
            operands_str: [Some("$a3"), Some("$v0"), Some("2"), None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xC8621800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "lwc2        $2, 0x1800($v1)",
            expected_opcode: Opcode::core_lwc2,
            opcode_str: "lwc2",
            operands_str: [Some("$2"), Some("0x1800($v1)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xD8621800,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "ldc2        $2, 0x1800($v1)",
            expected_opcode: Opcode::core_ldc2,
            opcode_str: "ldc2",
            operands_str: [Some("$2"), Some("0x1800($v1)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xE8810878,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "swc2        $1, 0x878($a0)",
            expected_opcode: Opcode::core_swc2,
            opcode_str: "swc2",
            operands_str: [Some("$1"), Some("0x878($a0)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xF8810878,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "sdc2        $1, 0x878($a0)",
            expected_opcode: Opcode::core_sdc2,
            opcode_str: "sdc2",
            operands_str: [Some("$1"), Some("0x878($a0)"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x4802E000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "mfc2        $v0, $28",
            expected_opcode: Opcode::core_mfc2,
            opcode_str: "mfc2",
            operands_str: [Some("$v0"), Some("$28"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x4882E000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "mtc2        $v0, $28",
            expected_opcode: Opcode::core_mtc2,
            opcode_str: "mtc2",
            operands_str: [Some("$v0"), Some("$28"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x4842E000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "cfc2        $v0, $28",
            expected_opcode: Opcode::core_cfc2,
            opcode_str: "cfc2",
            operands_str: [Some("$v0"), Some("$28"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x48C2E000,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: true,
            expected: "ctc2        $v0, $28",
            expected_opcode: Opcode::core_ctc2,
            opcode_str: "ctc2",
            operands_str: [Some("$v0"), Some("$28"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001A,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(true),
            valid: true,
            expected: "div         $zero, $a0, $a1",
            expected_opcode: Opcode::core_div,
            opcode_str: "div",
            operands_str: [Some("$zero, $a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001A,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(false),
            valid: true,
            expected: "div         $a0, $a1",
            expected_opcode: Opcode::core_div,
            opcode_str: "div",
            operands_str: [Some("$a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001B,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(true),
            valid: true,
            expected: "divu        $zero, $a0, $a1",
            expected_opcode: Opcode::core_divu,
            opcode_str: "divu",
            operands_str: [Some("$zero, $a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001B,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(false),
            valid: true,
            expected: "divu        $a0, $a1",
            expected_opcode: Opcode::core_divu,
            opcode_str: "divu",
            operands_str: [Some("$a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001E,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(true),
            valid: true,
            expected: "ddiv        $zero, $a0, $a1",
            expected_opcode: Opcode::core_ddiv,
            opcode_str: "ddiv",
            operands_str: [Some("$zero, $a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001E,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(false),
            valid: true,
            expected: "ddiv        $a0, $a1",
            expected_opcode: Opcode::core_ddiv,
            opcode_str: "ddiv",
            operands_str: [Some("$a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001F,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(true),
            valid: true,
            expected: "ddivu       $zero, $a0, $a1",
            expected_opcode: Opcode::core_ddivu,
            opcode_str: "ddivu",
            operands_str: [Some("$zero, $a0"), Some("$a1"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x0085001F,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default().with_gnu_div(false),
            valid: true,
            expected: "ddivu       $a0, $a1",
            expected_opcode: Opcode::core_ddivu,
            opcode_str: "ddivu",
            operands_str: [Some("$a0"), Some("$a1"), None, None, None],
        },


        // Invalid instructions

        TestEntry {
            instr: Instruction::new(
                0x44444444,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: false,
            expected: ".word       0x44444444                   /* cfc1        $a0, $8 / 00000444 <OpcodeCategory: CORE_COP1> */",
            expected_opcode: Opcode::core_cfc1,
            opcode_str: "cfc1",
            operands_str: [Some("$a0"), Some("$8"), None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0x77777777,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: false,
            expected: ".word       0x77777777                   /* INVALID / 03777777 <OpcodeCategory: CORE_NORMAL> */",
            expected_opcode: Opcode::ALL_INVALID,
            opcode_str: "INVALID",
            operands_str: [None, None, None, None, None],
        },
        TestEntry {
            instr: Instruction::new(
                0xEEEEEEEE,
                Vram::new(0x80000000),
                InstructionFlags::new().with_isa_version(IsaVersion::MIPS_III),
            ),
            imm_override: None,
            display_flags: DisplayFlags::default(),
            valid: false,
            expected: ".word       0xEEEEEEEE                   /* INVALID / 02EEEEEE <OpcodeCategory: CORE_NORMAL> */",
            expected_opcode: Opcode::ALL_INVALID,
            opcode_str: "INVALID",
            operands_str: [None, None, None, None, None],
        },
    ];

    assert_eq!(check_test_entries(ENTRIES, true), (0, 0));
}
